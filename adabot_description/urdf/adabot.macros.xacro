<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="adabot">


    <!-- Create the chassis geometry (for visuals and collisions) -->
    <xacro:property name="chassis_geometry">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="${ch_length} ${ch_width} ${ch_height}" />
        </geometry>
    </xacro:property>




    <!-- Create the wheel geometry (for visuals and collisions) -->
    <xacro:property name="wheel_geometry">
        <!-- Cylinders default with their height along the z axis -->
        <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
        <geometry>
            <cylinder length="${wh_length}" radius="${wh_radius}" />
        </geometry>
    </xacro:property>




    <!--
         Macro for creating wheels
            reflect_lr : is the wheel left (-1) or right (1)
            reflect_fr : is the wheel front (1) or rear (-1)
            suffix     : give the wheel a unique name
    -->
    <xacro:macro name="wheel" params="reflect_lr reflect_fr suffix">

        <!-- The name of the current wheel -->
        <xacro:property name="wheel_name" value="${suffix}_wheel" />

        <!-- Add the wheel's Gazebo material -->
        <xacro:gz_wheel_material name="${wheel_name}" />

        <!-- The wheel's rigid body -->
        <link name="${wheel_name}">
            <visual>
                <xacro:insert_block name="wheel_geometry" />
                <material name="black" />
            </visual>
            <collision>
                <xacro:insert_block name="wheel_geometry" />
            </collision>
            <inertial>
                <mass value="${wh_mass}" />
                <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
                <inertia
                    ixx="${(1/12)*wh_mass*(3*wh_radius**2 + wh_length**2)}"
                    ixy="0"
                    ixz="0"
                    iyy="${(1/12)*wh_mass*(3*wh_radius**2 + wh_length**2)}"
                    iyz="0"
                    izz="${(1/2)*wh_mass*wh_radius**2}"
                    />
            </inertial>
        </link>

        <!-- Connect the wheel to the chassis -->
        <joint name="${wheel_name}_joint" type="continuous">
            <parent link="chassis" />
            <child link="${wheel_name}" />
            <origin xyz="${ch_length/2*reflect_fr} ${(wh_length+ch_width)/2*reflect_lr} 0" rpy="0 0 0" />
            <axis xyz="0 1 0" />
            <limit effort="10" velocity="100" />
        </joint>

        <!--
             Attach a velocity controller to the wheel's joint
                Any changes to the wheel joint's name will need to be reflected
                  in 'adabot.control.yaml' and 'adabot.control.launch'.
        -->
        <transmission name="${wheel_name}_transmission" type="SimpleTransmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${wheel_name}_joint">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="${wheel_name}_motor">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <!-- Add wegs to this wheel -->
        <xacro:weg wheel="${suffix}" number="1" parent="${wh_name}" total="5" />
        <xacro:weg wheel="${suffix}" number="2" parent="${wh_name}" total="5" />
        <xacro:weg wheel="${suffix}" number="3" parent="${wh_name}" total="5" />
        <xacro:weg wheel="${suffix}" number="4" parent="${wh_name}" total="5" />
        <xacro:weg wheel="${suffix}" number="5" parent="${wh_name}" total="5" />

    </xacro:macro>




    <!-- Create the weg geometry (for visuals and collisions) -->
    <xacro:property name="wg_origin_geom">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <geometry>
            <box size="${wg_length} ${wg_width} ${wg_height}" />
        </geometry>
    </xacro:property>




    <!--
         Macro for creating wegs
            wheel  : the suffix of the parent wheel
            number : a unique identifier for each weg
            parent : the full name of the parent link
            total  : the number of wegs (used to calculate angles)
    -->
    <xacro:macro name="weg" params="wheel number parent total">

        <!-- The name of the current weg (based on the parent wheel's name) -->
        <xacro:property name="wg_name" value="wg_${wheel}_${number}" />

        <!-- The weg's rigid body -->
        <link name="${wg_name}">
            <visual>
                <xacro:insert_block name="wg_origin_geom" />
                <material name="white" />
            </visual>
            <collision>
                <xacro:insert_block name="wg_origin_geom" />
            </collision>
            <inertial>
                <mass value="${wg_mass}" />
                <inertia
                    ixx="${(1/12)*wg_mass*(wg_width**2 + wg_height**2)}"
                    ixy="0"
                    ixz="0"
                    iyy="${(1/12)*wg_mass*(wg_length**2 + wg_height**2)}"
                    iyz="0"
                    izz="${(1/12)*wg_mass*(wg_length**2 + wg_width**2)}"
                    />
            </inertial>
        </link>

        <!-- Connect the weg to the wheel with a prismatic joint -->
        <joint name="${wg_name}_joint" type="prismatic">
            <parent link="${parent}" />
            <child link="${wg_name}" />
            <origin rpy="0 ${2*PI*(number/total)} 0" xyz="0 0 0" />
            <limit upper="${wg_length*.2}" lower="0" effort="1" velocity="1" />
        </joint>

    </xacro:macro>
</robot>
