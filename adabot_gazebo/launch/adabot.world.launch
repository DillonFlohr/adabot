<?xml version="1.0"?>
<launch>

  <!--  -->
  <!-- These are values that can be passed via command line to this launch file, -->
  <!--    for example, paused:=true -->
  <!--  paused       : start the simulation in a paused state -->
  <!--  use_sim_time : tell ROS nodes to get the time published by Gazebo -->
  <!--  gui          : launch the user interface -->
  <!--  headless     : disable all rendering (does not work with gui:=true) -->
  <!--  debug        : start gzserver in debug mode using gdb -->
  <!--  model        : xacro file for adabot -->
  <!--  -->
  <arg name="paused"       default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui"          default="true"/>
  <arg name="headless"     default="false"/>
  <arg name="debug"        default="false"/>
  <arg name="model"        default="$(find adabot_description)/urdf/adabot.base.xacro"/>

  <!--  -->
  <!-- Start with the empty_world.launch file -->
  <!--  -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(find adabot_gazebo)/worlds/adabot.empty.world"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui"          value="$(arg gui)" />
    <arg name="headless"     value="$(arg headless)"/>
    <arg name="debug"        value="$(arg debug)" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model adabot -param robot_description"/> -->

  <!-- ros_control adabot launch file -->
  <!--include file="$(find adabot_control)/launch/adabot_control.launch" /-->

</launch>
